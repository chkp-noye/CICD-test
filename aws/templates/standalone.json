{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploys either a manually configurable or a Check Point CloudGuard IaaS Security Gateway & Management (Standalone) instance in a new VPC (__VERSION__)",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "VPC Network Configuration"
          },
          "Parameters": [
            "AvailabilityZone",
            "VpcCidr",
            "ExternalSubnetCidr",
            "InternalSubnetCidr",
            "ResourcesTagName"
          ]
        },
        {
          "Label": {
            "default": "EC2 Instance Configuration"
          },
          "Parameters": [
            "Name",
            "InstanceType",
            "KeyName",
            "AllocatePublicAddress",
            "VolumeSize"
          ]
        },
        {
          "Label": {
            "default": "Check Point Settings"
          },
          "Parameters": [
            "Version",
            "Shell",
            "PasswordHash",
            "InstallationType"
          ]
        },
        {
          "Label": {
            "default": "Advanced Settings (ignored when the installation type is Manual Configuration)"
          },
          "Parameters": [
            "Hostname",
            "AllowUploadDownload",
            "NTPPrimary",
            "NTPSecondary",
            "AdminSubnet",
            "GatewaysAddresses"
          ]
        }
      ],
      "ParameterLabels": {
        "AvailabilityZone": {
          "default": "Availability zone"
        },
        "VpcCidr": {
          "default": "VPC CIDR"
        },
        "ExternalSubnetCidr": {
          "default": "External subnet CIDR"
        },
        "InternalSubnetCidr": {
          "default": "Internal subnet CIDR"
        },
        "ResourcesTagName": {
          "default": "Resources prefix tag"
        },
        "InstallationType": {
          "default": "Installation type"
        },
        "Name": {
          "default": "Name"
        },
        "Version": {
          "default": "License"
        },
        "InstanceType": {
          "default": "Instance type"
        },
        "KeyName": {
          "default": "Key name"
        },
        "AllocatePublicAddress": {
          "default": "Allocate an Elastic IP"
        },
        "Shell": {
          "default": "Admin shell"
        },
        "PasswordHash": {
          "default": "Password hash"
        },
        "Hostname": {
          "default": "Hostname"
        },
        "VolumeSize": {
          "default": "Root volume size (GB)"
        },
        "AllowUploadDownload": {
          "default": "Allow upload & download"
        },
        "NTPPrimary": {
          "default": "Primary NTP server"
        },
        "NTPSecondary": {
          "default": "Secondary NTP server"
        },
        "AdminSubnet": {
          "default": "Administrator addresses"
        },
        "GatewaysAddresses": {
          "default": "Gateways addresses"
        }
      }
    }
  },
  "Parameters": {
    "AvailabilityZone": {
      "Description": "The availability zone in which to deploy the instance",
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "MinLength": "1"
    },
    "VpcCidr": {
      "Description": "The CIDR block for your VPC",
      "Type": "String",
      "Default": "10.0.0.0/16"
    },
    "ExternalSubnetCidr": {
      "Description": "The external subnet of the Security Gateway",
      "Type": "String",
      "Default": "10.0.0.0/24"
    },
    "InternalSubnetCidr": {
      "Description": "The internal subnet of the Security Gateway",
      "Type": "String",
      "Default": "10.0.1.0/24"
    },
    "ResourcesTagName": {
      "Description": "(optional)",
      "Type": "String"
    },
    "Name": {
      "Type": "String",
      "Default": "Check-Point-Instance"
    },
    "InstallationType": {
      "Default": "Gateway & Management (Standalone)",
      "Description": "When set to Manual Configuration, the settings below will be ignored",
      "Type": "String",
      "AllowedValues": [
        "Gateway & Management (Standalone)",
        "Manual Configuration"
      ],
      "ConstraintDescription": "Must specify Type of Installation"
    },
    "Version": {
      "Description": "Select BYOL if you plan on using your own license or PAYG if you wish to pay as you go",
      "Type": "String",
      "Default": "R80.10-PAYG-NGTP",
      "AllowedValues": [
        "R80.10-BYOL",
        "R80.10-PAYG-NGTP"
      ]
    },
    "InstanceType": {
      "Description": "The EC2 instance type of the instance",
      "Type": "String",
      "Default": "m4.xlarge",
      "AllowedValues": [
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "t2.xlarge",
        "t2.2xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type"
    },
    "KeyName": {
      "Description": "The EC2 Key Pair to allow SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "MinLength": "1",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "AllocatePublicAddress": {
      "Default": "true",
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "Shell": {
      "Description": "Change the admin shell to enable advanced command line configuration",
      "Type": "String",
      "Default": "/etc/cli.sh",
      "AllowedValues": [
        "/etc/cli.sh",
        "/bin/bash",
        "/bin/csh",
        "/bin/tcsh"
      ]
    },
    "PasswordHash": {
      "Description": "Admin user's password hash (use command \"openssl passwd -1 PASSWORD\" to get the PASSWORD's hash) (optional)",
      "NoEcho": "true",
      "Type": "String",
      "Default": "",
      "AllowedPattern": "[\\$\\./a-zA-Z0-9]*"
    },
    "Hostname": {
      "Description": "(optional)",
      "Type": "String",
      "AllowedPattern": "^([A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z])?|)$",
      "ConstraintDescription": "A valid hostname label or an empty string"
    },
    "VolumeSize": {
      "Type": "Number",
      "MinValue": "100",
      "Default": "100"
    },
    "AllowUploadDownload": {
      "Description": "Automatically download Blade Contracts and other important data. Improve product experience by sending data to Check Point",
      "Type": "String",
      "Default": "true",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "NTPPrimary": {
      "Description": "(optional)",
      "Type": "String",
      "Default": "169.254.169.123",
      "AllowedPattern": "[\\.a-zA-Z0-9\\-]*"
    },
    "NTPSecondary": {
      "Description": "(optional)",
      "Type": "String",
      "Default": "0.pool.ntp.org",
      "AllowedPattern": "[\\.a-zA-Z0-9\\-]*"
    },
    "AdminSubnet": {
      "Description": "Allow web, SSH, and graphical clients only from this network to communicate with the Management Server",
      "Type": "String",
      "AllowedPattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$"
    },
    "GatewaysAddresses": {
      "Description": "Allow gateways only from this network to communicate with the Management Server (optional)",
      "Type": "String",
      "Default": "10.0.0.0/16",
      "AllowedPattern": "^(([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2]))?$"
    }
  },
  "Conditions": {
    "ResourcesTagNameGiven": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "ResourcesTagName"
            },
            ""
          ]
        }
      ]
    },
    "AllocatePublicAddress": {
      "Fn::Equals": [
        {
          "Ref": "AllocatePublicAddress"
        },
        "true"
      ]
    }
  },
  "Resources": {
    "InfraStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "__URL__/infrastructure.json",
        "Parameters": {
          "VpcCidr": {
            "Ref": "VpcCidr"
          },
          "AvailabilityZone": {
            "Ref": "AvailabilityZone"
          },
          "ExternalSubnetCidr": {
            "Ref": "ExternalSubnetCidr"
          },
          "InternalSubnetCidr": {
            "Ref": "InternalSubnetCidr"
          },
          "ResourcesTagName": {
            "Ref": "ResourcesTagName"
          }
        }
      }
    },
    "InternalRoutingTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Fn::GetAtt": [
            "InfraStack",
            "Outputs.VPC"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "_",
                [
                  {
                    "Fn::If": [
                      "ResourcesTagNameGiven",
                      {
                        "Ref": "ResourcesTagName"
                      },
                      {
                        "Ref": "AWS::StackName"
                      }
                    ]
                  },
                  "InternalRoutingTable"
                ]
              ]
            }
          }
        ]
      }
    },
    "InternalNetworkRouteAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "InternalRoutingTable"
        },
        "SubnetId": {
          "Fn::GetAtt": [
            "InfraStack",
            "Outputs.InternalSubnet"
          ]
        }
      }
    },
    "ChkpProductStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "__URL__/standalone-into-vpc.json",
        "Parameters": {
          "VPC": {
            "Fn::GetAtt": [
              "InfraStack",
              "Outputs.VPC"
            ]
          },
          "ExternalSubnet": {
            "Fn::GetAtt": [
              "InfraStack",
              "Outputs.ExternalSubnet"
            ]
          },
          "InternalSubnet": {
            "Fn::GetAtt": [
              "InfraStack",
              "Outputs.InternalSubnet"
            ]
          },
          "InternalRouteTable": {
            "Ref": "InternalRoutingTable"
          },
          "ResourcesTagName": {
            "Ref": "ResourcesTagName"
          },
          "Name": {
            "Ref": "Name"
          },
          "InstallationType": {
            "Ref": "InstallationType"
          },
          "Version": {
            "Ref": "Version"
          },
          "InstanceType": {
            "Ref": "InstanceType"
          },
          "KeyName": {
            "Ref": "KeyName"
          },
          "AllocatePublicAddress": {
            "Ref": "AllocatePublicAddress"
          },
          "Shell": {
            "Ref": "Shell"
          },
          "PasswordHash": {
            "Ref": "PasswordHash"
          },
          "Hostname": {
            "Ref": "Hostname"
          },
          "VolumeSize": {
            "Ref": "VolumeSize"
          },
          "AllowUploadDownload": {
            "Ref": "AllowUploadDownload"
          },
          "NTPPrimary": {
            "Ref": "NTPPrimary"
          },
          "NTPSecondary": {
            "Ref": "NTPSecondary"
          },
          "AdminSubnet": {
            "Ref": "AdminSubnet"
          },
          "GatewaysAddresses": {
            "Ref": "GatewaysAddresses"
          }
        }
      }
    }
  },
  "Outputs": {
    "InstallationType": {
      "Description": "Type of Check Point Instance that was created",
      "Value": {
        "Fn::GetAtt": [
          "ChkpProductStack",
          "Outputs.InstallationType"
        ]
      }
    },
    "CheckPointInstancePublicAddress": {
      "Description": "The public address of the Check Point instance",
      "Value": {
        "Fn::GetAtt": [
          "ChkpProductStack",
          "Outputs.PublicAddress"
        ]
      },
      "Condition": "AllocatePublicAddress"
    },
    "CheckPointInstanceSSH": {
      "Description": "SSH command to the Check Point instance",
      "Value": {
        "Fn::GetAtt": [
          "ChkpProductStack",
          "Outputs.SSH"
        ]
      },
      "Condition": "AllocatePublicAddress"
    },
    "CheckPointInstanceURL": {
      "Description": "URL to the portal",
      "Value": {
        "Fn::GetAtt": [
          "ChkpProductStack",
          "Outputs.URL"
        ]
      },
      "Condition": "AllocatePublicAddress"
    }
  }
}

