AWSTemplateFormatVersion: '2010-09-09'
Description: Create an Auto Scaling group of workload servers (__VERSION__)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: VPC Network Configuration
      Parameters:
      - VPC
      - Subnets
    - Label:
        default: EC2 Instances Configuration
      Parameters:
      - Name
      - ImageId
      - AllocatePublicAddress
      - InstanceType
      - KeyName
    - Label:
        default: Auto Scaling Configuration
      Parameters:
      - MinSize
      - MaxSize
      - AdminEmail
      - LoadBalancers
      - TargetGroups
      - SecurityGroup
    ParameterLabels:
      VPC:
        default: VPC
      Subnets:
        default: Subnets
      AdminEmail:
        default: Email address
      LoadBalancers:
        default: Load Balancers
      TargetGroups:
        default: Target Groups
      MinSize:
        default: Minimum group size
      MaxSize:
        default: Maximum group size
      Name:
        default: Instance(s) Name
      ImageId:
        default: Amazon Image ID
      AllocatePublicAddress:
        default: Allocate an Elastic IP
      InstanceType:
        default: Instance type
      KeyName:
        default: Key name
      SecurityGroup:
        default: Security Group
Parameters:
  VPC:
    Description: Select an existing VPC
    Type: AWS::EC2::VPC::Id
    MinLength: '1'
  Subnets:
    Description: Select at least 2 subnets in the VPC
    Type: List<AWS::EC2::Subnet::Id>
    MinLength: '1'
  MinSize:
    Description: The minimal number of gateways in the Auto Scaling group
    Default: '2'
    Type: Number
    MinValue: '1'
  MaxSize:
    Description: The maximal number of gateways in the Auto Scaling group
    Default: '10'
    Type: Number
    MinValue: '1'
  Name:
    Type: String
    Default: Server
  ImageId:
    Type: String
    AllowedPattern: '[a|A][m|M][i|I]-[a-f0-9]{8,17}'
    ConstraintDescription: must be a valid Amazon Machine Image ID
  AllocatePublicAddress:
    Default: false
    Type: String
    AllowedValues:
    - true
    - false
  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.12xlarge
    - m5.24xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5.9xlarge
    - c5.18xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  AdminEmail:
    Description: Notifications about scaling events will be sent to this email address
      (optional)
    Type: String
    Default: ''
    AllowedPattern: "(|([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))"
    ConstraintDescription: must be a valid email address.
  LoadBalancers:
    Description: An optional list of Classic Load Balancers associated with this Auto Scaling group (comma separated list of LB names, without spaces)
    Type: String
    Default: ''
  TargetGroups:
    Description: An optional list of Target Groups to associate with the Auto Scaling group (comma separated list of ARNs, without spaces)
    Type: String
    Default: ''
  SecurityGroup:
    Description: The ID of Security Group from which access will be allowed to the instances in this Auto Scaling group
    Type: String
    Default: ''
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    MinLength: '1'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
Conditions:
  ProvidedAdminEmail: !Not [!Equals [!Ref AdminEmail, '']]
  ProvidedLoadBalancers: !Not [!Equals [!Ref LoadBalancers, '']]
  ProvidedTargetGroups: !Not [!Equals [!Ref TargetGroups, '']]
  ProvidedSecurityGroup: !Not [!Equals [!Ref SecurityGroup, '']]
  NotProvidedSecurityGroup: !Equals [!Ref SecurityGroup, '']
Resources:
  NotificationTopic:
    Type: AWS::SNS::Topic
    Condition: ProvidedAdminEmail
    Properties:
      Subscription:
      - Endpoint: !Ref AdminEmail
        Protocol: email
  PermissiveSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: NotProvidedSecurityGroup
    Properties:
      Tags:
      - Key: Name
        Value: !Join
          - '_'
          - - !Ref AWS::StackName
            - PermissiveSecurityGroup
      GroupDescription: Permissive security group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: -1
        CidrIp: 0.0.0.0/0
  RestrictiveSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: ProvidedSecurityGroup
    Properties:
      Tags:
      - Key: Name
        Value: !Join
          - '_'
          - - !Ref AWS::StackName
            - RestrictiveSecurityGroup
      GroupDescription: Restrictive security group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        SourceSecurityGroupId: !Ref SecurityGroup
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        SourceSecurityGroupId: !Ref SecurityGroup
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: !Ref AllocatePublicAddress
      KeyName: !Ref KeyName
      ImageId: !Ref ImageId
      SecurityGroups: !If [ProvidedSecurityGroup, [!Ref RestrictiveSecurityGroup], [!Ref PermissiveSecurityGroup]]
      InstanceType: !Ref InstanceType
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      LoadBalancerNames: !If
      - ProvidedLoadBalancers
      - !Split
        - ','
        - !Ref LoadBalancers
      - !Ref AWS::NoValue
      TargetGroupARNs: !If
      - ProvidedTargetGroups
      - !Split
        - ","
        - !Ref TargetGroups
      - !Ref AWS::NoValue
      NotificationConfiguration: !If
      - ProvidedAdminEmail
      - TopicARN: !Ref NotificationTopic
        NotificationTypes:
        - autoscaling:EC2_INSTANCE_LAUNCH
        - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
        - autoscaling:EC2_INSTANCE_TERMINATE
        - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      - Ref: AWS::NoValue
      Tags:
      - Key: Name
        Value: !Ref Name
        PropagateAtLaunch: 'true'
  ScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScalingGroup
      Cooldown: '300'
      ScalingAdjustment: '1'
  ScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScalingGroup
      Cooldown: '300'
      ScalingAdjustment: "-1"
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-up if CPU > 80% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '2'
      Threshold: '80'
      AlarmActions:
      - !Ref ScaleUpPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref AutoScalingGroup
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-down if CPU < 60% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '2'
      Threshold: '60'
      AlarmActions:
      - !Ref ScaleDownPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref AutoScalingGroup
      ComparisonOperator: LessThanThreshold
