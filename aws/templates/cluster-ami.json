{
    "Description" : "Deploy a Check Point Cluster in VPC",
    "Parameters" : {
        "ImageId" : {
            "Description" : "Amazon Machine ID",
            "Type": "AWS::EC2::Image::Id",
            "MinLength": "1"
        },
        "InstanceType" : {
            "Description" : "Check Point Security Gateway instance type",
            "Type" : "String",
            "Default" : "c4.large",
            "AllowedValues" : [ "m3.medium", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge"],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },
        "VpcCidr" : {
            "Description" : "The CIDR block for your VPC",
            "Type": "String",
            "Default" : "10.0.0.0/16"
        },
        "AvailabilityZone" : {
            "Description" : "The availability zone in which to deploy the cluster",
            "Type": "AWS::EC2::AvailabilityZone::Name",
            "MinLength": "1"
        },
        "ExternalSubnetCidr" : {
            "Description" : "The external subnet of the cluster",
            "Type": "String",
            "Default": "10.0.0.0/24"
        },
        "ClusterExternalAddr" : {
            "Description" : "The private address of the cluster on the external subnet",
            "Type": "String", 
            "Default": "10.0.0.10"
        },
        "MemberAExternalAddr" : {
            "Description" : "The private address of member A on the external subnet",
            "Type": "String",
            "Default": "10.0.0.20"
        },
        "MemberBExternalAddr" : {
            "Description" : "The private address of member B on the external subnet",
            "Type": "String",
            "Default": "10.0.0.30"
        },
        "ClusterInternalAddr" : {
            "Type": "String",
            "Default": "10.0.1.10"
        },
        "MemberAInternalAddr" : {
            "Type": "String",
            "Default": "10.0.1.20"
        },
        "MemberBInternalAddr" : {
            "Type": "String",
            "Default": "10.0.1.30"
        },
        "InternalSubnetCidr" : {
            "Type": "String",
            "Default": "10.0.1.0/24"
        },
        "KeyName" : {
            "Description" : "SSH Key Pair",
            "Type" : "AWS::EC2::KeyPair::KeyName",
            "MinLength": "1"
        },
        "PasswordHash" : {
            "Description" : "(optional) The admin user password hash (hint, use \"openssl passwd -1\")",
            "Default": "",
            "Type" : "String"
        },
        "SICKey" : {
            "Description" : "Secure Internal Communication (SIC) Activation key",
            "NoEcho" : "true",
            "MinLength": "8",
            "Type" : "String",
            "AllowedPattern" : "[a-zA-Z0-9]*",
            "ConstraintDescription": "At least 8 alpha numeric characters"
        },
        "Shell" : {
            "Description" : "The user admin shell",
            "Type" : "String",
            "Default" : "/etc/cli.sh",
            "AllowedValues" : [ "/etc/cli.sh", "/bin/bash", "/bin/csh", "/bin/tcsh"]
        }
    },
    "Resources" : {
        "InfraStack" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" : {
                "TemplateURL" : "https://s3.amazonaws.com/CloudFormationTemplate/infrastructure.json",
                "Parameters" : {
                    "VpcCidr" : { "Ref" : "VpcCidr" },
                    "AvailabilityZone" : { "Ref" : "AvailabilityZone" },
                    "ExternalSubnetCidr" : { "Ref" : "ExternalSubnetCidr" },
                    "InternalSubnetCidr" : { "Ref" : "InternalSubnetCidr" },
                    "ResourcesTagName" : { "Ref" : "AWS::StackName" }
                }
            }
        },        
        "ClusterStack" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" : {
                "TemplateURL" :
"@cluster-into-vpc-ami.json"
                    ,
                "Parameters" : {
                    "ImageId" : { "Ref" : "ImageId" },
                    "InstanceType" : { "Ref" : "InstanceType" },
                    "VPC" : { "Fn::GetAtt" : [ "InfraStack", "Outputs.VPC" ] },
                    "ExternalSubnet" : { "Fn::GetAtt" : [ "InfraStack", "Outputs.ExternalSubnet" ] },
                    "InternalSubnet" : { "Fn::GetAtt" : [ "InfraStack", "Outputs.InternalSubnet" ] },
                    "AvailabilityZone" : { "Ref" : "AvailabilityZone" },
                    "ClusterExternalAddr" : { "Ref" : "ClusterExternalAddr" },
                    "MemberAExternalAddr" : { "Ref" : "MemberAExternalAddr" },
                    "MemberBExternalAddr" : { "Ref" : "MemberBExternalAddr" },
                    "ClusterInternalAddr" : { "Ref" : "ClusterInternalAddr" },
                    "MemberAInternalAddr" : { "Ref" : "MemberAInternalAddr" },
                    "MemberBInternalAddr" : { "Ref" : "MemberBInternalAddr" },
                    "KeyName" : { "Ref" : "KeyName" },
                    "PasswordHash" : { "Ref" : "PasswordHash" },
                    "SICKey" : { "Ref" : "SICKey" },
                    "Shell" : { "Ref" : "Shell" }
                }
            }
        }
    },
    "Outputs" : {
        "ClusterPublicAddress" : {
            "Description" : "The public address of the cluster",
            "Value" : { "Fn::GetAtt" : [ "ClusterStack", "Outputs.ClusterPublicAddress" ] }
        },
        "MemberAPublicAddress" : {
            "Description" : "The public address of member A",
            "Value" : { "Fn::GetAtt" : [ "ClusterStack", "Outputs.MemberAPublicAddress" ] }
        },
        "MemberASSH" : {
            "Description" : "SSH command to member A",
            "Value" : { "Fn::Join" : [ "", [ "ssh admin@", { "Fn::GetAtt" : [ "ClusterStack", "Outputs.MemberAPublicAddress" ] }]]}
        },        
        "MemberAURL" : {
            "Description" : "URL to the member A portal",
            "Value" : { "Fn::Join" : [ "", [ "https://", { "Fn::GetAtt" : [ "ClusterStack", "Outputs.MemberAPublicAddress" ] }]]}
        },       
        "MemberBPublicAddress" : {
            "Description" : "The public address of member B",
            "Value" : { "Fn::GetAtt" : [ "ClusterStack", "Outputs.MemberBPublicAddress" ] }
        },
        "MemberBSSH" : {
            "Description" : "SSH command to member B",
            "Value" : { "Fn::Join" : [ "", [ "ssh admin@", { "Fn::GetAtt" : [ "ClusterStack", "Outputs.MemberBPublicAddress" ] }]]}
        },        
        "MemberBURL" : {
            "Description" : "URL to the member B portal",
            "Value" : { "Fn::Join" : [ "", [ "https://", { "Fn::GetAtt" : [ "ClusterStack", "Outputs.MemberBPublicAddress" ] }]]}
        }
    }
}
